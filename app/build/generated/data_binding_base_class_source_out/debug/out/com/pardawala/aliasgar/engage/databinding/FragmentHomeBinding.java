// Generated by view binder compiler. Do not edit!
package com.pardawala.aliasgar.engage.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.pardawala.aliasgar.engage.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final FloatingActionButton fabFilter;

  @NonNull
  public final FloatingActionButton fabLike;

  @NonNull
  public final FloatingActionButton fabNext;

  @NonNull
  public final FloatingActionButton fabReset;

  @NonNull
  public final FloatingActionButton fabStar;

  @NonNull
  public final FloatingActionButton fabTime;

  @NonNull
  public final FloatingActionButton fabTop;

  @NonNull
  public final Group groupLeft;

  @NonNull
  public final Group groupRight;

  @NonNull
  public final Guideline guidelineHome;

  @NonNull
  public final Guideline guidelineVert;

  @NonNull
  public final ImageView imBackground;

  @NonNull
  public final ImageView imName;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView tvAge;

  @NonNull
  public final TextView tvBio;

  @NonNull
  public final TextView tvCrossPath;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvPlace;

  @NonNull
  public final TextView tvTime;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout container, @NonNull FloatingActionButton fabFilter,
      @NonNull FloatingActionButton fabLike, @NonNull FloatingActionButton fabNext,
      @NonNull FloatingActionButton fabReset, @NonNull FloatingActionButton fabStar,
      @NonNull FloatingActionButton fabTime, @NonNull FloatingActionButton fabTop,
      @NonNull Group groupLeft, @NonNull Group groupRight, @NonNull Guideline guidelineHome,
      @NonNull Guideline guidelineVert, @NonNull ImageView imBackground, @NonNull ImageView imName,
      @NonNull ImageView imageView, @NonNull TextView tvAge, @NonNull TextView tvBio,
      @NonNull TextView tvCrossPath, @NonNull TextView tvName, @NonNull TextView tvPlace,
      @NonNull TextView tvTime) {
    this.rootView = rootView;
    this.container = container;
    this.fabFilter = fabFilter;
    this.fabLike = fabLike;
    this.fabNext = fabNext;
    this.fabReset = fabReset;
    this.fabStar = fabStar;
    this.fabTime = fabTime;
    this.fabTop = fabTop;
    this.groupLeft = groupLeft;
    this.groupRight = groupRight;
    this.guidelineHome = guidelineHome;
    this.guidelineVert = guidelineVert;
    this.imBackground = imBackground;
    this.imName = imName;
    this.imageView = imageView;
    this.tvAge = tvAge;
    this.tvBio = tvBio;
    this.tvCrossPath = tvCrossPath;
    this.tvName = tvName;
    this.tvPlace = tvPlace;
    this.tvTime = tvTime;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout container = (ConstraintLayout) rootView;

      id = R.id.fab_filter;
      FloatingActionButton fabFilter = rootView.findViewById(id);
      if (fabFilter == null) {
        break missingId;
      }

      id = R.id.fab_like;
      FloatingActionButton fabLike = rootView.findViewById(id);
      if (fabLike == null) {
        break missingId;
      }

      id = R.id.fab_next;
      FloatingActionButton fabNext = rootView.findViewById(id);
      if (fabNext == null) {
        break missingId;
      }

      id = R.id.fab_reset;
      FloatingActionButton fabReset = rootView.findViewById(id);
      if (fabReset == null) {
        break missingId;
      }

      id = R.id.fab_star;
      FloatingActionButton fabStar = rootView.findViewById(id);
      if (fabStar == null) {
        break missingId;
      }

      id = R.id.fab_time;
      FloatingActionButton fabTime = rootView.findViewById(id);
      if (fabTime == null) {
        break missingId;
      }

      id = R.id.fab_top;
      FloatingActionButton fabTop = rootView.findViewById(id);
      if (fabTop == null) {
        break missingId;
      }

      id = R.id.group_left;
      Group groupLeft = rootView.findViewById(id);
      if (groupLeft == null) {
        break missingId;
      }

      id = R.id.group_right;
      Group groupRight = rootView.findViewById(id);
      if (groupRight == null) {
        break missingId;
      }

      id = R.id.guideline_home;
      Guideline guidelineHome = rootView.findViewById(id);
      if (guidelineHome == null) {
        break missingId;
      }

      id = R.id.guideline_vert;
      Guideline guidelineVert = rootView.findViewById(id);
      if (guidelineVert == null) {
        break missingId;
      }

      id = R.id.im_background;
      ImageView imBackground = rootView.findViewById(id);
      if (imBackground == null) {
        break missingId;
      }

      id = R.id.im_name;
      ImageView imName = rootView.findViewById(id);
      if (imName == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = rootView.findViewById(id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.tv_age;
      TextView tvAge = rootView.findViewById(id);
      if (tvAge == null) {
        break missingId;
      }

      id = R.id.tv_bio;
      TextView tvBio = rootView.findViewById(id);
      if (tvBio == null) {
        break missingId;
      }

      id = R.id.tv_cross_path;
      TextView tvCrossPath = rootView.findViewById(id);
      if (tvCrossPath == null) {
        break missingId;
      }

      id = R.id.tv_name;
      TextView tvName = rootView.findViewById(id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tv_place;
      TextView tvPlace = rootView.findViewById(id);
      if (tvPlace == null) {
        break missingId;
      }

      id = R.id.tv_time;
      TextView tvTime = rootView.findViewById(id);
      if (tvTime == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, container, fabFilter, fabLike,
          fabNext, fabReset, fabStar, fabTime, fabTop, groupLeft, groupRight, guidelineHome,
          guidelineVert, imBackground, imName, imageView, tvAge, tvBio, tvCrossPath, tvName,
          tvPlace, tvTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
